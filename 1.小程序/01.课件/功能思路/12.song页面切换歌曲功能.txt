需求:当用户点击上一首/下一首时,切换对应歌曲进行播放,并且展示对应歌曲的信息
拆解:
	1.当用户点击上一首/下一首按钮时
		绑定事件监听来监视用户的操作
		事件源:上一首/下一首按钮
		事件名:tap

	2.播放对应的歌曲
		继续拆解:
			1.如何播放歌曲?
				跟早上所实现的播放按钮逻辑相似,可以使用背景音频管理器来进行播放
				播放的时候需要给背景音频管理器对象添加src和title属性,所以必须知道音频的链接
				发送请求可以获取到音频链接,但是需要参数歌曲的id

			2.对应的歌曲是哪一首?
				

	3.展示对应歌曲的信息
		继续拆解:
			1.如何展示歌曲信息?
				与早上所实现的song页面动态渲染逻辑相似,将歌曲信息对象跟新到data中的songObj属性即可
				页面就会自动展示数据(需要知道当前歌曲信息)
				发送请求可以获取到音频信息,但是需要参数歌曲的id
			
			2.对应的歌曲是哪一首?
	

	合并问题2和问题3
		问题:如何知道对应歌曲的id?
		说明:当前页面没有上一首或者下一首歌曲的id
			因为每个人的上下首都不一样
		
		小总结:播放列表其实就是每日推荐页面的列表,所以上下首信息其实在每日推荐页面保存着
			然后需要使用数据的是当前的song页面

		问题:如何实现两个页面之间的通信?
			当前两个组件之间的关系是兄弟组件,或者说是两个路由组件
			Vue	两个组件之间的通信方式
				1.Vuex
				2.localStorage
					大小限制5MB
				3.路由传参
				4.全局事件总线
					感觉上去全局事件总线通信方式,可以跨组件通信,而且没有任何约束
					
					角色:
						1.订阅者(想要接收数据的人)
							例如:学生
						2.发布者(想要传递数据的人)
							例如:老师

					动作:
						1.订阅(做好接收数据的准备,等待数据)
						2.发布(将准备好的数据传递出去,发送数据)

					约束:
						1.订阅必须在发布之前
						2.订阅者和发布者必须同时存在

			小程序
				1.app实例对象
					需要将整个播放列表都存入到app中才能实现,只存上下首歌曲id不够
				2.Storage
					需要将整个播放列表都存入到app中才能实现,只存上下首歌曲id不够
					一般不是重要数据,都不会往Storage中存储
					注意:Storage也有大小限制,单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB
				3.路由传参
					路由传参只能发生在路由跳转的一瞬间
					注意:路由传参的url具有长度限制,所以无法传递过大的数据
				4.PubSub

					订阅	->	PubSub.subscribe(消息名称, 接收数据的回调函数)
					发布	->	PubSub.publish(消息名称, 需要发送出去的数据);
					解绑	->	PubSub.unsubscribe(订阅消息时候返回的token)

					npm包使用流程:
						1.初始化package.json文件
							npm init -y
							注意:如果当前项目名称是中文,就不能写-y,如果不是就可以写-y
						2.下载依赖
							npm i pubsub-js
						3.打开npm模块使用
							微信开发者工具->详情->本地设置->勾选"使用npm模块"
						4.构建npm文件
							微信开发者工具->工具->构建npm
						5.在项目中,引入依赖包,并使用
					
					如果是后续新添加依赖,只需要重复以上的2,4,5流程


			需求1:每日推荐页面需要将对应歌曲id传递给song页面
				订阅方:song页面
				发布方:每日推荐页面
				问题:每日推荐页面怎么知道什么时候将id发送给song页面?
					在某些条件下,将id发送给song页面
			
			需求2:当用户点击上一首/下一首按钮时,song页面告知每日推荐页面,用户点击了哪个按钮
				订阅方:每日推荐页面
				发布方:song页面

			准备工作:
				1.需要给每日推荐页面绑定消息订阅,用于接收流程1中发布的数据
					没经过每日推荐,绝对到达不了song页面
					时机:在每日推荐页面onLoad的时候,就绑定消息订阅
						onShow可能会订阅多次,而onLoad只会在挂载页面的时候,订阅一次

				2.流程2中需要根据当前的歌曲来找到对应的歌曲id,所以需要记录当前是哪一首歌
					时机:在用户点击每日推荐列表,跳转到song页面的该瞬间,就可以确定,用户song页面展示的是哪首歌
					所以:在跳转的时候,将当前点击的歌曲的id记录下来,用于后续查找下一首歌曲信息

						使用id可以记录当前歌曲是哪一首,但是每次找下一首,都需要提前先遍历一次数组,找到当前的下标,太浪费时间
						所以:建议大家记录当前用户点击的歌曲下标即可,方便查找下一首歌

				3.流程3中,每日推荐页面会将数据发送给song页面,所以song页面需要提前做好订阅操作
					时机:在song流程1发布数据之前绑定订阅即可
			流程:
				1.当用户点击上一首/下一首按钮时,song页面将用户的操作标识发送给每日推荐页面
					操作标识->"pre"代表上一首,"next"代表下一首
					订阅方:每日推荐页面
					发布方:song页面
					数据内容:用户的操作标识
					消息名称:switchType

				2.每日推荐页面接收到操作标识,根据标识提示找到对应的歌曲id
					问题:如何知道当前这一首歌是哪一首?

				3.每日推荐页面将找到的id,发送给song页面
					订阅方:song页面
					发布方:每日推荐页面
					数据内容:歌曲的id
					消息名称:sendId

				4.song页面接收到歌曲id,请求该歌曲的链接以及详细信息
					需要封装请求链接和详细信息的函数
				
				5.最终播放歌曲,并且展示详细信息
					将数据更新到data中就可以展示












		

				