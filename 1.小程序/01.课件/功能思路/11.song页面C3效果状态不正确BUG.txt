问题:当用户离开song页面之后,再次进入song页面,很有可能出现背景音频播放状态和页面的C3效果不一致的情况
	可能出现歌曲正在播放,但是页面处于未播放状态

原因:因为用户点击返回按钮的时候,当前song页面会被销毁/卸载,他所存储的数据都会丢失,
	而再次进入song页面的时候,会重新挂载song页面,得到新的实例对象以及初始化的状态数据


需求:如果用户进入song页面时,当前正在播放的背景音频与当前页面显示的歌曲是同一首歌曲,页面C3效果自动进入播放状态
拆解:
	1.如果用户进入song页面时
		需要监视用户进入页面的情况,可以通过生命周期来监视
			由于song页面每次离开都会卸载,所以进入的时候一定会触发所有的进入阶段生命周期
				所以选择哪个都行,此处我选择时间最早的onLoad

	2.当前正在播放的背景音频与当前页面显示的歌曲是同一首歌曲
		继续拆解:
			1.如何知道当前背景音频是否正在播放?
				在用户点击播放按钮的一瞬间,就可以确定歌曲处于播放还是暂停状态?
					我们将播放状态存储在了song页面实例对象的isPlay状态中,但是页面会销毁,数据会丢失

				问题:将数据存储在什么地方,可以防止页面卸载时,数据不会丢失?

			2.如何知道当前背景音频是哪一首歌?
				在用户点击播放按钮的一瞬间,就可以确定当前歌曲是哪一首歌
					我们将歌曲信息存储在了song页面实例对象的songObj状态中,但是页面会销毁,数据会丢失

				问题:将数据存储在什么地方,可以防止页面卸载时,数据不会丢失?
					如果是在Vue中,符合以上特点的存储方案
						VueX
							数据存储于内存中
							读写速度较快,性能较好
							关机,关闭浏览器,关闭标签,刷新页面都会导致VueX数据丢失
							相当于在内存中开辟了一块空间,方便所有组件进行访问存储数据
			
						localStorage
							数据存储于硬盘中
							读写速度较慢,性能较差
							只要不手动删除,数据就不会丢失
					小程序中对应的方案
						app实例对象
							可以在app实例对象身上添加数据,
							任何页面想要得到这个数据,都可以通过getApp获取到app实例对象,在进行读取

							语法:
								1.读取属性->与普通对象没有区别
								2.修改属性->与普通对象没有区别
								3.属性取名->与普通对象没有区别,可以任意取名
								总结:其实他就是一个普通对象,并不存在响应式的效果
						Storage


			3.如何知道当前页面显示的是哪一首歌?
				在进入页面的时候,recommendSong页面就已经将当前显示的歌曲id传入song页面了
			4.如何知道两首歌曲是否是同一首歌?
				比较两首歌曲的唯一标识id即可


	3.页面C3效果自动进入播放状态
		将isPlay状态更新为true即可